{"ast":null,"code":"var _jsxFileName = \"/Users/anuj/Desktop/WEB_PROJECT_01/frontend/src/auth/helper/AdminRoutes.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from './index';\n\nconst AdminRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => isAuthenticated() && isAuthenticated().user.role === 1 ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: {\n        pathname: '/signin',\n        state: {\n          from: props.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n};\n\nexport default AdminRoute;","map":{"version":3,"sources":["/Users/anuj/Desktop/WEB_PROJECT_01/frontend/src/auth/helper/AdminRoutes.js"],"names":["React","Route","Redirect","isAuthenticated","AdminRoute","component","Component","rest","props","user","role","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,SAASC,eAAT,QAAgC,SAAhC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AACpD,SACI,oBAAC,KAAD,oBACQA,IADR;AAEI,IAAA,MAAM,EAAGC,KAAK,IACVL,eAAe,MAAMA,eAAe,GAAGM,IAAlB,CAAuBC,IAAvB,KAAgC,CAArD,GACI,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,GAGI,oBAAC,QAAD;AACI,MAAA,EAAE,EAAE;AACAG,QAAAA,QAAQ,EAAE,SADV;AAEAC,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAEL,KAAK,CAACM;AAAb;AAFP,OADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAiBH,CAlBD;;AAoBA,eAAeV,UAAf","sourcesContent":["import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport { isAuthenticated } from './index'\n\nconst AdminRoute = ({component: Component, ...rest}) => {\n    return (\n        <Route\n            {...rest}\n            render={ props => \n                isAuthenticated() && isAuthenticated().user.role === 1 ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/signin',\n                            state: {from: props.location}\n                        }}\n                    /> \n                )\n            }\n        />\n    )\n}\n\nexport default AdminRoute"]},"metadata":{},"sourceType":"module"}